name: Backend CI

on:
  workflow_call:
  workflow_dispatch:

permissions:
  contents: read
  packages: write

concurrency:
  group: ci-backend-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test_and_lint_backends:
    runs-on: ubuntu-latest

    services:
      product_db:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: products
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=5s
          --health-timeout=5s
          --health-retries=5
        ports:
          - "5432:5432"

      order_db:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: orders
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=5s
          --health-timeout=5s
          --health-retries=5
        ports:
          - "5433:5432"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          pip install -r backend/product_service/requirements.txt
          pip install -r backend/order_service/requirements.txt
          pip install pytest flake8

      # Make lint advisory so it won't fail CI
      - name: Lint product_service (advisory)
        run: flake8 backend/product_service
        continue-on-error: true

      - name: Lint order_service (advisory)
        run: flake8 backend/order_service
        continue-on-error: true

      # Run tests per service to avoid pytest import collisions
      - name: Run product_service tests
        working-directory: backend/product_service
        env:
          PRODUCT_DB_HOST: localhost
          PRODUCT_DB_PORT: 5432
          ORDER_DB_HOST: localhost
          ORDER_DB_PORT: 5433
        run: |
          find . -name "__pycache__" -type d -prune -exec rm -rf {} +
          pytest -q tests

      - name: Run order_service tests
        working-directory: backend/order_service
        env:
          PRODUCT_DB_HOST: localhost
          PRODUCT_DB_PORT: 5432
          ORDER_DB_HOST: localhost
          ORDER_DB_PORT: 5433
        run: |
          find . -name "__pycache__" -type d -prune -exec rm -rf {} +
          pytest -q tests
